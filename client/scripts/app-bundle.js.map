{"version":3,"sources":["app.js","environment.js","main.js","resources/index.js","services/api.js","pages/activity/activity.js","pages/leaders/homeruns.js","pages/standings/list.js","pages/teams/create.js","pages/welcome/index.js","resources/elements/baseball-card.js","resources/elements/loading.js","resources/elements/nav-bar.js","resources/value-converters/baseball-card-id.js","resources/value-converters/date-format.js","resources/value-converters/home-away.js","resources/value-converters/roundAvg.js","resources/value-converters/win-loss.js","/Users/jmitchell/Code/homerunleague/client/src/app.html","/Users/jmitchell/Code/homerunleague/client/src/styles.css","/Users/jmitchell/Code/homerunleague/client/src/pages/activity/activity.html","/Users/jmitchell/Code/homerunleague/client/src/pages/leaders/homeruns.html","/Users/jmitchell/Code/homerunleague/client/src/pages/standings/list.html","/Users/jmitchell/Code/homerunleague/client/src/pages/teams/create.html","/Users/jmitchell/Code/homerunleague/client/src/pages/welcome/index.html","/Users/jmitchell/Code/homerunleague/client/src/resources/elements/baseball-card.html","/Users/jmitchell/Code/homerunleague/client/src/resources/elements/nav-bar.html"],"names":[],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {inject} from 'aurelia-framework';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {Api} from './services/api';\n\n@inject(EventAggregator, Api)\nexport class App {\n\n  _api;\n  _ea;\n\n  lastTeamUpdate = null;\n\n  constructor(eventAggregator, api) {\n    this._ea = eventAggregator;\n    this._api = api;\n\n    // Auto-scroll the window to the top after navigating to a new route. \n    eventAggregator.subscribe('router:navigation:complete', payload => window.scrollTo(0, 0));\n  }\n\n  activate() {\n    // Set into motion stat check every 60 seconds.\n    this._getUpdateStatus();\n    setInterval(() => this._getUpdateStatus(), 60000);\n\n    // Have Aurelia wait until we get the settings\n    return this._api.getSettings().then(\n      settings => { this._api.year = settings.BaseballYear });\n  }\n\n  // Configure router\n  configureRouter(config, router) {\n    config.title = 'Homerun League';\n    config.map([\n      { route: ['', 'welcome'], name: 'welcome', moduleId: 'pages/welcome/index', nav: true, title: 'Welcome' },\n      { route: 'teams/create', name: 'join', moduleId: 'pages/teams/create', nav: true, title: 'Join League' },\n      { route: 'leaders', name: 'leaders', moduleId: 'pages/leaders/homeruns', nav: true, title: 'Leaders' },\n      { route: 'standings', name: 'standings', moduleId: 'pages/standings/list', nav: true, title: 'Standings' },\n      { route: 'activity', name: 'activity', moduleId: 'pages/activity/activity', nav: true, title: 'Activity' },\n      { route: 'players/:id', name: 'player', moduleId: 'pages/players/details', nav: false, title: 'Join League' },\n    ]);\n\n    this.router = router;\n  }\n\n  // Called every 60 seconds to check for + notify of TeamStat updates\n  _getUpdateStatus() {\n    return this._api.getEvents('TeamUpdate').then(results => {\n      \n      if (this.lastTeamUpdate !== null && results.LeagueEvents[0].Completed !== this.lastTeamUpdate) {\n        this._ea.publish('TeamUpdate');\n        console.info('TeamUpdate event published');\n      }\n\n      this.lastTeamUpdate = results.LeagueEvents[0].Completed;\n    });\n  }\n}","export default {\n  debug: true,\n  testing: true,\n  api: 'http://192.168.11.141:9001/api/',\n};\n","import environment from './environment';\n\n//Configure Bluebird Promises.\n//Note: You may want to use environment-specific configuration.\nPromise.config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export function configure(config) {\n  config.globalResources(['./elements/nav-bar', './elements/loading'],);\n}\n","import {inject} from 'aurelia-framework';\nimport {HttpClient, json} from 'aurelia-fetch-client';\nimport 'whatwg-fetch'; // polyfil for fetch\nimport environment from '../environment'\n\n@inject(environment, HttpClient)\nexport class Api {\n\tisRequesting = false;\n\n\tconstructor(environment, http) {\n\n\t\t// Year we're interested in.  Default to current year.\n\t\tthis.year = new Date().getFullYear()\n\n\t\t// Configure fetch client\n\t\thttp.configure(config => {\n\t\t\tconfig\n\t\t\t\t.withBaseUrl(environment.api)\n\t\t\t\t.withDefaults({\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t'Accept': 'application/json'\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.withInterceptor({\n\t\t\t\t\trequest(request) {\n\t\t\t\t\t\tthis.isRequesting = true;\n\t\t\t\t\t\treturn request;\n\t\t\t\t\t},\n\t\t\t\t\tresponse(response) {\n\t\t\t\t\t\tthis.isRequesting = false;\n\t\t\t\t\t\treturn response.json();\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t});\n\n\t\tthis.http = http;\n\t}\n\n\t// Create a new Team\n\tcreateTeam(team) {\n\t\treturn this.http.fetch(`seasons/${this.year}/teams`, {\n\t\t\tmethod: 'post',\n\t\t\tbody: json(team)\n\t\t});\n\t}\n\n\t// Get Administrative Event History\n\tgetEvents(action, page = 1) {\n\t\treturn this.http.fetch(`admin/events?page=${page}&action=${action}`)\n\t}\n\n\t// Get Divisions\n\tgetDivisions() {\n\t\treturn this.http.fetch(`seasons/${this.year}/divisions`);\n\t}\n\n\t// Get GameLogs For Player\n\tgetGameLogsForPlayer(playerId, year = this.year, page = 1) {\n\t\treturn this.http.fetch(`players/${playerId}/gamelogs?year=${year}&page=${page}`);\n\t}\n\n\t// Get Leaders\n\tgetLeaders(page = 1) {\n\t\treturn this.http.fetch(`seasons/${this.year}/leaders?page=${page}`);\n\t}\n\n\t// Get Recent HR\n\tgetRecentHr(page = 1) {\n\t\treturn this.http.fetch(`seasons/${this.year}/recent?page=${page}`);\n\t}\n\n\t// Get Player\n\tgetPlayer(playerId) {\n\t\treturn this.http.fetch(`players/${playerId}`);\n\t}\n\n\t// Get Settings\n\tgetSettings() {\n\t\treturn this.http.fetch(`admin/settings`);\n\t}\n\n\t// Get Teams\n\tgetTeams(page = 1) {\n\t\treturn this.http.fetch(`seasons/${this.year}/teams?page=${page}`);\n\t}\n}","import {inject} from 'aurelia-framework';\nimport {Api} from '../../services/api';\nimport $ from 'bootstrap';\n\n@inject(Api)\nexport class Activity {\n  constructor(api) {\n    this.api = api;\n    this.recent = [];\n  }\n\n  activate(params) {\n    // Load all pages for now...\n    let loadRecent = (page) => {\n      return this.api.getRecentHr(page).then(results => {\n\n        this.recent = this.recent.concat(results.RecentHrs);\n        \n        if (results.Meta.Page < results.Meta.TotalPages)\n          return loadRecent(results.Meta.Page + 1);\n      });\n    }\n\n    return loadRecent();\n  }\n}","import {inject} from 'aurelia-framework';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {Api} from '../../services/api';\nimport $ from 'bootstrap';\nimport moment from 'moment';\n\n@inject(EventAggregator, Api)\nexport class HomeRuns {\n\n  _api;\n  _ea;\n  _subscriber;\n\n  leaders;\n\n  constructor(eventAggregator, api) {\n    this._api = api;\n    this._ea = eventAggregator;\n  }\n\n  activate(params) {\n    return this._getData();\n  }\n\n  attached() {\n    // Enable the tooltips\n    $('[data-toggle=\"tooltip\"]').tooltip();\n    \n    // Subscript to team update notifications\n    this._subscriber = this._ea.subscribe('TeamUpdate', () => { return this.getData() });\n  }\n\n  detached() {\n    this._subscriber.dispose(); // cleanup the subscription\n  }\n\n  _getData() {\n    this.leaders = [];\n\n    // Load all pages for now...\n    let getLeaders = (page) => {\n      return this._api.getLeaders(page).then(results => {\n\n        this.leaders = this.leaders.concat(results.Leaders);\n\n        if (results.Meta.Page < results.Meta.TotalPages)\n          return getLeaders(results.Meta.Page + 1);\n      });\n    };\n\n    return getLeaders().then(() => this._initHistory());\n  }\n\n  _initHistory() {\n    for (let leader of this.leaders) {\n      leader.history = { \"recentHr\": [], \"loaded\": false };\n    }\n  }\n\n  _loadHistory(player, gamelogs) {\n    if (player.history.loaded)\n      return;\n\n    var now = moment()\n\n    for (let gamelog of gamelogs) {\n      let gameDate = moment(gamelog.GameDate);\n\n      if (player.history.recentHr.length < 5 && gamelog.Hr > 0) {\n        let location = gamelog.HomeAway === 'A' ? 'at' : 'vs'\n        player.history.recentHr.push({ \"date\": gameDate.format('MM/DD'), \"hr\": gamelog.Hr, \"location\": location, \"opp\": gamelog.Opponent });\n      }\n    }\n\n    player.history.loaded = true;\n  }\n\n  toggleHistory(player) {\n    var spinner = $(`#spinner-${player.PlayerId}`);\n    var history = $(`#history-${player.PlayerId}`);\n\n    if(!history.is(':visible'))\n      spinner.show();\n\n    this._api.getGameLogsForPlayer(player.PlayerId).then(results => {\n      this._loadHistory(player, results.GameLogs);\n      spinner.hide();\n      history.slideToggle('fast', function () { });\n    });\n  }\n}\n\n\n","import {inject} from 'aurelia-framework';\nimport {Api} from '../../services/api';\n\n@inject(Api)\nexport class List {\n\n  _api;\n  teams = [];\n\n  constructor(api) {\n    this._api = api;\n  }\n\n  activate(params) {\n    // Load all pages for now...\n    let loadData = (page) => {\n      return this._api.getTeams(page).then(results => {\n        \n        this.teams = this.teams.concat(results.Teams);\n\n        if (results.Meta.Page < results.Meta.TotalPages)\n          return loadData(results.Meta.Page + 1);\n      });\n    };\n\n    return loadData();\n  }\n}\n\n\n","import {inject} from 'aurelia-framework';\nimport {Api} from '../../services/api';\nimport $ from 'bootstrap';\nimport bootstrap from 'bootstrap';\n\n@inject(Api)\nexport class Create {\n\n  _api;\n  name = 'Test Name';\n  email = 'test@yahoo.com'\n  status = '';\n  divisions = [];\n\n  constructor(api) {\n    this._api = api;\n  }\n\n  attached() {\n    // Grab the affixed element.\n    var element = $('#myAffix');\n\n    // Enable affix\n    element.affix();\n\n    // Fixes an affix width bug.  This sets the width to the parent's width\n    element.width(element.parent().width());\n  }\n\n  activate(params) {\n    return this._api.getDivisions().then(result => { this.divisions = result.Divisions; });\n  }\n\n  get validLineup() {\n    for (var division of this.divisions) {\n      if (division.selectedCount != division.PlayerRequirement)\n        return false;\n    }\n\n    return true;\n  }\n\n  createTeam() {\n\n    this.status = 'Saving...';\n\n    let playerIds = [];\n\n    for (var division of this.divisions) {\n      for (var player of division.Players)\n        if (player.selected)\n          playerIds.push(player.Id);\n    }\n\n    this._api.createTeam({ name: this.name, email: this.email, playerIds: playerIds }).then(result => {\n      console.info(result);\n      this.status = 'Done!';\n    });\n  }\n\n  loadPlayerStats(player) {\n    if (player.PlayerTotals === undefined) {\n      return this._api.getPlayer(player.Id).then(result => {\n        player.PlayerTotals = result.Player.PlayerTotals;\n      });\n    }\n    else\n      return true;\n  }\n\n  scrollToAnchor(anchorName) {\n    var aTag = $(\"a[name='\" + anchorName + \"']\");\n    $('html,body').animate({ scrollTop: aTag.offset().top - 55 }, 'slow');\n  }\n\n  togglePlayer(division, player) {\n    if (division.selectedCount == null)\n      division.selectedCount = 0;\n\n    if (player.selected) {\n      player.selected = false; // Works!\n      division.selectedCount--;\n    }\n    else {\n      player.selected = true; // Works!\n      division.selectedCount++;\n    }\n  }\n}   \n","export class Welcome {\n\tconstructor () {\n    \t\n  \t}\n}\n","import {bindable} from 'aurelia-framework';\nimport $ from 'bootstrap';\nimport 'flip';\n\nexport class BaseballCard {\n    @bindable id = '';\n    @bindable player = {};\n\n    attached() {\n        $(`#${this.id}`).flip({trigger: 'click'}); \n    }\n}","import * as nprogress from 'nprogress';\nimport {bindable, noView, decorators} from 'aurelia-framework';\n\nexport let Loading = decorators(\n  noView(['nprogress/nprogress.css']),\n  bindable({name: 'loading', defaultValue: false})\n).on(class {\n  loadingChanged(newValue){\n    if (newValue) {\n      nprogress.start();\n    } else {\n      nprogress.done();\n    }\n  }\n});","import {bindable, inject} from 'aurelia-framework'\nimport moment from 'moment';\n\n@inject()\nexport class NavBar {\n\t@bindable router = null;\n\t@bindable lastTeamUpdate = null;\n\n\tconstructor() {\n\t\tthis.ticker = null;\n\t\tthis.updateStatus = '';\n\t}\n\n\tattached() {\n\t\tthis.setUpdateStatus();\n\t\tthis.ticker = setInterval(() => this.setUpdateStatus(), 60000);\n\t}\n\n\tdetached() {\n\t\tif(this.ticker !== null)\n\t\t\tclearInterval(this.ticker);\n\t}\n\t\n\tsetUpdateStatus() {\n\t\tif (this.lastTeamUpdate === null)\n\t\t\tthis.updateStatus = '';\n\n\t\tif (this.lastTeamUpdate === undefined)\n\t\t\tthis.updateStatus =  'Stat update running now'\n\n\t\tlet update = moment(this.lastTeamUpdate).toDate()\n\n\t\tthis.updateStatus =  'Stats updated ' +\n\t\t\tmoment(moment.utc([update.getFullYear(),\n\t\t\t\tupdate.getMonth(),\n\t\t\t\tupdate.getDate(),\n\t\t\t\tupdate.getHours(),\n\t\t\t\tupdate.getMinutes(),\n\t\t\t\tupdate.getSeconds()]).toDate()).fromNow();\n\t}\n}\t\n","export class BaseballCardIdValueConverter {\n  toView(value) {\n    return value.toString().substring(0,3);\n  }\n}","import moment from 'moment';\n\nexport class DateFormatValueConverter {\n  toView(value, format) {\n    return moment(value).format(format);\n  }\n}","export class HomeAwayValueConverter {\n  toView(value) {\n    return value.toUpperCase() === 'H' ? 'vs' : 'at';\n  }\n}","export class RoundAvgValueConverter {\n  toView(value, places) {\n    return value.toFixed(places).toString().substring(1);\n  }\n}","export class WinLossValueConverter {\n  toView(value) {\n    return value.toUpperCase() === 'W' ? 'win' : 'loss';\n  }\n}",null,null,null,null,null,null,null,null,null],"sourceRoot":"../src"}